package vista;

import java.util.List;
import javax.swing.table.DefaultTableModel;
import modelo.Historial;
import controlador.Ctrl_historial;
import javax.swing.JFileChooser;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.*;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import javax.swing.*;
import java.io.File;
import java.io.FileInputStream;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

public class PanelHistorial extends javax.swing.JPanel {

    private final Ctrl_historial ctrlHistorial;
    private final DefaultTableModel modeloTabla;
    private final List<Historial> listaHistorial;

    public PanelHistorial() {
        initComponents();

        ctrlHistorial = new Ctrl_historial();
        listaHistorial = ctrlHistorial.listarHistorial();

        modeloTabla = new DefaultTableModel(
                new Object[]{"ID", "Paciente", "Fecha Registro", "Diagnóstico", "Tratamiento", "Observaciones"}, 0
        );
        tablaHistorial.setModel(modeloTabla);

        cargarTabla();
    }

    private void cargarTabla() {
        modeloTabla.setRowCount(0);
        DateTimeFormatter fmt = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm");

        for (Historial h : listaHistorial) {
            modeloTabla.addRow(new Object[]{
                h.getIdHistorial(),
                h.getNombrePaciente() + " " + h.getApellidoPaciente(),
                h.getFechaRegistro().format(fmt),
                h.getDiagnostico(),
                h.getTratamiento(),
                h.getObservaciones()
            });
        }
    }

    private void importarDesdeExcel() {
        JFileChooser fileChooser = new JFileChooser();
        int resultado = fileChooser.showOpenDialog(this);

        if (resultado == JFileChooser.APPROVE_OPTION) {
            File archivo = fileChooser.getSelectedFile();

            try (FileInputStream fis = new FileInputStream(archivo); Workbook workbook = new XSSFWorkbook(fis)) {

                Sheet hoja = workbook.getSheetAt(0);
                DateTimeFormatter fmt = DateTimeFormatter.ofPattern("d/M/yyyy HH:mm");

                for (int i = 1; i <= hoja.getLastRowNum(); i++) {
                    Row fila = hoja.getRow(i);
                    if (fila == null) {
                        continue;
                    }

                    Historial h = new Historial();

                    Cell cellIdPaciente = fila.getCell(1);
                    h.setIdPaciente((int) cellIdPaciente.getNumericCellValue());

                    h.setNombrePaciente(fila.getCell(2).getStringCellValue());
                    h.setApellidoPaciente(fila.getCell(3).getStringCellValue());

                    Cell cellFecha = fila.getCell(4);
                    if (cellFecha.getCellType() == CellType.NUMERIC && DateUtil.isCellDateFormatted(cellFecha)) {
                        h.setFechaRegistro(cellFecha.getLocalDateTimeCellValue());
                    } else if (cellFecha.getCellType() == CellType.STRING) {
                        h.setFechaRegistro(LocalDateTime.parse(cellFecha.getStringCellValue(), fmt));
                    }

                    h.setDiagnostico(fila.getCell(5).getStringCellValue());
                    h.setTratamiento(fila.getCell(6).getStringCellValue());
                    h.setObservaciones(fila.getCell(7).getStringCellValue());

                    listaHistorial.add(h);
                    modeloTabla.addRow(new Object[]{
                        h.getIdHistorial(),
                        h.getNombrePaciente() + " " + h.getApellidoPaciente(),
                        h.getFechaRegistro().format(fmt),
                        h.getDiagnostico(),
                        h.getTratamiento(),
                        h.getObservaciones()
                    });

                    ctrlHistorial.guardarHistorial(h);
                }

                JOptionPane.showMessageDialog(this, "Completo");

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error al importar Excel: " + e.getMessage());
                e.printStackTrace();
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelRound1 = new Componente.PanelRound();
        jScrollPane1 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaHistorial = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        btnImportarExcel = new Componente.ButtonRound();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelRound1.setBackground(new java.awt.Color(242, 242, 242));
        panelRound1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tablaHistorial.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Paciente", "Fecha Registro", "Diagnóstico", "Tratamiento", "Observaciones"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tablaHistorial);

        jScrollPane1.setViewportView(jScrollPane2);

        panelRound1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 210, 870, 550));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("HISTORIAL MÉDICO DE LOS PACIENTES");
        panelRound1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 130, -1, -1));

        btnImportarExcel.setText("IMPORTAR");
        btnImportarExcel.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        btnImportarExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportarExcelActionPerformed(evt);
            }
        });
        panelRound1.add(btnImportarExcel, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 800, 230, 50));

        add(panelRound1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1160, 920));
    }// </editor-fold>//GEN-END:initComponents

    private void btnImportarExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportarExcelActionPerformed
        this.importarDesdeExcel();
    }//GEN-LAST:event_btnImportarExcelActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private Componente.ButtonRound btnImportarExcel;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private Componente.PanelRound panelRound1;
    private javax.swing.JTable tablaHistorial;
    // End of variables declaration//GEN-END:variables
}
